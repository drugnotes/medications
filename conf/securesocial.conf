#####################################################################################
#
# SecureSocial 2 Settings
#
#####################################################################################

smtp {
	host=smtp.gmail.com
	#port=25
	ssl=true
	user="wuhaixing"
	password=gmailw578411x
	from="wuhaixing@gmail.com"
}

securesocial {
	#
	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	#
	onLoginGoTo=/

	#
	# Where to redirect the user when he logs out. If not set SecureSocial will redirect to the login page
	#
	onLogoutGoTo=/login

	#
	# Enable SSL for oauth callback urls and login/signup/password recovery pages
	#
	ssl=false

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=your_client_id
		clientSecret=your_client_secret
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

	linkedin {
		requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
		accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
		authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}
    	
	github {
		authorizationUrl="https://github.com/login/oauth/authorize"
		accessTokenUrl="https://github.com/login/oauth/access_token"
		clientId=a8530b59ccd10e121bf5
		clientSecret=fe17663bc31c013ccd98848963972aa1629ff6b5
	}

  weibo {
  	authorizationUrl="https://api.weibo.com/oauth2/authorize"
  	accessTokenUrl="https://api.weibo.com/oauth2/access_token"
  	clientId=2185301577
  	clientSecret=5a0892cad0bb7b1a5f2e4189187b057a
    scope=email
  }
    
	userpass {
		withUserNameSupport=false
		sendWelcomeEmail=true
		enableGravatarSupport=true
	}
}
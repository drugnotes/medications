# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                         controllers.Drugs.index

# Drugs list (look at the default values for pagination parameters)
GET     /drugs                    controllers.Drugs.list(p:Int ?= 0, s:Int ?= 2, f ?= "")

# Add Drug
GET     /drugs/add                controllers.Drugs.add
POST    /drugs                    controllers.Drugs.save

# Edit existing drug
GET     /drugs/:id                controllers.Drugs.edit(id:Long)
POST    /drugs/:id                controllers.Drugs.update(id:Long)

POST    /drugs/:id/delete         controllers.Drugs.delete(id: Long)

# Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# User Registration and password handling 
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file             controllers.Assets.at(path="/public", file)
